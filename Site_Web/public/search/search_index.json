{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Projet d'album photo \u00e0 l'aide du STM32F7 Le d\u00e9p\u00f4t est r\u00e9alis\u00e9 sur GitHub Mon d\u00e9p\u00f4t Git . Contenu du d\u00e9p\u00f4t On trouve sur ce d\u00e9p\u00f4t : * Un dossier prog_Album_Photo contenant le programme principal * Un dossier prog_Mini_Projet_Album_Photo contenant un code de base non utilis\u00e9. * Un fichier README.md qui pr\u00e9sente de mani\u00e8re tr\u00e8s succinte le but du projet et le cahier des charges \u00e9tabli. Informations sur le projet Le but de ce projet \u00e9tait de cr\u00e9er un code pour le STM32F7 qui permette de lire des photos sur une carte SD pour les afficher sur l'\u00e9cran LCD en mode diaporama automatique fonctionnant avec FreeRTOS. Modifications Test Informations sur la pr\u00e9sentation Vous trouverez aussi dans cette documentation une partie rappelant les bases sur le SDMMC.","title":"Accueil"},{"location":"#projet-dalbum-photo-a-laide-du-stm32f7","text":"Le d\u00e9p\u00f4t est r\u00e9alis\u00e9 sur GitHub Mon d\u00e9p\u00f4t Git .","title":"Projet d'album photo \u00e0 l'aide du STM32F7"},{"location":"#contenu-du-depot","text":"On trouve sur ce d\u00e9p\u00f4t : * Un dossier prog_Album_Photo contenant le programme principal * Un dossier prog_Mini_Projet_Album_Photo contenant un code de base non utilis\u00e9. * Un fichier README.md qui pr\u00e9sente de mani\u00e8re tr\u00e8s succinte le but du projet et le cahier des charges \u00e9tabli.","title":"Contenu du d\u00e9p\u00f4t"},{"location":"#informations-sur-le-projet","text":"Le but de ce projet \u00e9tait de cr\u00e9er un code pour le STM32F7 qui permette de lire des photos sur une carte SD pour les afficher sur l'\u00e9cran LCD en mode diaporama automatique fonctionnant avec FreeRTOS. Modifications Test","title":"Informations sur le projet"},{"location":"#informations-sur-la-presentation","text":"Vous trouverez aussi dans cette documentation une partie rappelant les bases sur le SDMMC.","title":"Informations sur la pr\u00e9sentation"},{"location":"documentation/","text":"Documentation Cette partie sert \u00e0 \u00e9clairer le code du projet sur l'album photo. L'objectif L'objectif de ce projet est d'avoir une visionneuse de photographie automatique sur notre carte STM32 lisant des photos \u00e0 partir d'une carte SD, le tout fonctionnant avec FreeRTOS. Le fonctionnement Ce programme permet d'afficher des images se trouvant au format .BMP ( Bitmap ) qui sont dans un dossier Media dans le r\u00e9pertoire racine d'une carte SD. Des images se trouvent sur le d\u00e9p\u00f4t GitHub ici : Media . Le code propos\u00e9 est largement inspir\u00e9 de celui du projet LTDC_PicturesFromSDCard propos\u00e9 par STM. ATTENTION Les images ne doivent pas d\u00e9paser une taille de 480x272. Cependant, le programme accepte les images plus petites. Le diagramme d'interaction Vous trouverez ci-dessous le diagramme d'interaction entre les diff\u00e9rentes t\u00e2ches du projet. Il se trouve que la t\u00e2che d\u00e9marrage n'appara\u00eet pas car je n'ai pas r\u00e9ussi \u00e0 la faire fonctionner. Elle n'entre alors plus en jeu dans le fonctionnement du programme. L'utilisation de la carte SD et de FreeRTOS Affichage d'une image L'affichage des images se fait en utilisant les 2 calques ( layers ) de l'\u00e9cran en alternance. Le code s\u00e9lectionne l'image via le compteur qui est d\u00e9fini dans la liste des images disponibles sur la carte SD. Ensuite, il vient stocker l'image dans un buffer avant de l'afficher sur un des calques ( BSP_LCD_DrawBitmap(...) ). Transitions Les transitions sont r\u00e9alis\u00e9es lors du changement d'image et il s'agit de fondus au noir. L'image actuelle s'assombrit jusqu'\u00e0 ce que l'\u00e9cran affiche du noir, puis l'image suivante s'\u00e9claircit jusqu'\u00e0 apparara\u00eetre. Ce type de fondu est choisi car il permet de ne stocker dans le buffer m\u00e9moire de la carte STM32 qu'une image \u00e0 la fois. Les transitions s'effectue en jouant aussi sur les deux calques (ici le calque 0). Pour forcer la transition d'une image, on utilise une messagerie qui vient modifier la valeur sur compteur en fonction de l\u00e0 o\u00f9 l'utilisateur a appuy\u00e9 sur l'\u00e9cran. Difficult\u00e9s Il a \u00e9t\u00e9 difficile de mettre en place l'utilisation de FreeRTOS en m\u00eame temps que l'utilisation de la carte SD. Cependant, une fois ce blocage d\u00e9pass\u00e9 (gr\u00e2ce \u00e0 l'intervention (divine ?) de M. Juton), il ne restait plus qu'\u00e0 faire la transposition des biblioth\u00e8ques propos\u00e9es par STM pour la lecture de fichiers bitmap. Cependant, il fallait faire bien attention \u00e0 n'importer que les biblioth\u00e8ques n\u00e9cessaires et \u00e0 commenter les lignes inutiles et qui faisaient doublon avec d'autres biblioth\u00e8ques d\u00e9j\u00e0 utilis\u00e9es.","title":"Documentation Album Photo"},{"location":"documentation/#documentation","text":"Cette partie sert \u00e0 \u00e9clairer le code du projet sur l'album photo.","title":"Documentation"},{"location":"documentation/#lobjectif","text":"L'objectif de ce projet est d'avoir une visionneuse de photographie automatique sur notre carte STM32 lisant des photos \u00e0 partir d'une carte SD, le tout fonctionnant avec FreeRTOS.","title":"L'objectif"},{"location":"documentation/#le-fonctionnement","text":"Ce programme permet d'afficher des images se trouvant au format .BMP ( Bitmap ) qui sont dans un dossier Media dans le r\u00e9pertoire racine d'une carte SD. Des images se trouvent sur le d\u00e9p\u00f4t GitHub ici : Media . Le code propos\u00e9 est largement inspir\u00e9 de celui du projet LTDC_PicturesFromSDCard propos\u00e9 par STM. ATTENTION Les images ne doivent pas d\u00e9paser une taille de 480x272. Cependant, le programme accepte les images plus petites.","title":"Le fonctionnement"},{"location":"documentation/#le-diagramme-dinteraction","text":"Vous trouverez ci-dessous le diagramme d'interaction entre les diff\u00e9rentes t\u00e2ches du projet. Il se trouve que la t\u00e2che d\u00e9marrage n'appara\u00eet pas car je n'ai pas r\u00e9ussi \u00e0 la faire fonctionner. Elle n'entre alors plus en jeu dans le fonctionnement du programme.","title":"Le diagramme d'interaction"},{"location":"documentation/#lutilisation-de-la-carte-sd-et-de-freertos","text":"","title":"L'utilisation de la carte SD et de FreeRTOS"},{"location":"documentation/#affichage-dune-image","text":"L'affichage des images se fait en utilisant les 2 calques ( layers ) de l'\u00e9cran en alternance. Le code s\u00e9lectionne l'image via le compteur qui est d\u00e9fini dans la liste des images disponibles sur la carte SD. Ensuite, il vient stocker l'image dans un buffer avant de l'afficher sur un des calques ( BSP_LCD_DrawBitmap(...) ).","title":"Affichage d'une image"},{"location":"documentation/#transitions","text":"Les transitions sont r\u00e9alis\u00e9es lors du changement d'image et il s'agit de fondus au noir. L'image actuelle s'assombrit jusqu'\u00e0 ce que l'\u00e9cran affiche du noir, puis l'image suivante s'\u00e9claircit jusqu'\u00e0 apparara\u00eetre. Ce type de fondu est choisi car il permet de ne stocker dans le buffer m\u00e9moire de la carte STM32 qu'une image \u00e0 la fois. Les transitions s'effectue en jouant aussi sur les deux calques (ici le calque 0). Pour forcer la transition d'une image, on utilise une messagerie qui vient modifier la valeur sur compteur en fonction de l\u00e0 o\u00f9 l'utilisateur a appuy\u00e9 sur l'\u00e9cran.","title":"Transitions"},{"location":"documentation/#difficultes","text":"Il a \u00e9t\u00e9 difficile de mettre en place l'utilisation de FreeRTOS en m\u00eame temps que l'utilisation de la carte SD. Cependant, une fois ce blocage d\u00e9pass\u00e9 (gr\u00e2ce \u00e0 l'intervention (divine ?) de M. Juton), il ne restait plus qu'\u00e0 faire la transposition des biblioth\u00e8ques propos\u00e9es par STM pour la lecture de fichiers bitmap. Cependant, il fallait faire bien attention \u00e0 n'importer que les biblioth\u00e8ques n\u00e9cessaires et \u00e0 commenter les lignes inutiles et qui faisaient doublon avec d'autres biblioth\u00e8ques d\u00e9j\u00e0 utilis\u00e9es.","title":"Difficult\u00e9s"},{"location":"presentation/","text":"Pr\u00e9sentation sur le SDMMC Cette partie permet d'afficher la pr\u00e9sentation sur le SDMMC sur un site web static. Diapositive 1 Diapositive 2 Diapositive 3 On rappelle que le protocole SDMMC permet de faire communiquer une carte SD ou une carte MMC avec un microcontr\u00f4leur. Il est grandement inspir\u00e9 du protocole SPI, protocole tr\u00e8s utilis\u00e9. Il est donc important d'avoir quelques bases sur le SPI avant de comprendre le fonctionnement du SDMMC. Diapositive 4 On pr\u00e9sent ainsi le protocole SPI rapidement avec son fonctionnement sur 4 fils. Cependant, il existe des configurations sur 3 fils o\u00f9 l'on regroupe le MOSI et le MISO sur un seul et unique fil. Ainsi, le SPI est flexible mais pr\u00e9sentent plus de connexions que l'I2C. Diapositive 5 Le protocole SDMMC est bas\u00e9 sur une configuration SPI \u00e0 3 fils (3 wired). C'est un protocole qui permet de meilleures performances en terme de rapidit\u00e9 que le SPI. De plus, il est assez flexible car on peut param\u00e9trer le bus de donn\u00e9es en diff\u00e9rents modes. Enfin, il prend en compte le DMA pour gagner en rapidit\u00e9 lorsque l'on souhaite transferer des donn\u00e9es. Diapositive 6 On explique dans cette diapositive rapidement le fonctionnement g\u00e9n\u00e9ral du SDMMC et sa syntaxe avec un bit de START , un bit de STOP et un checksum \u00e0 la fin pour v\u00e9rifier l'int\u00e9grit\u00e9 de ce qui a \u00e9t\u00e9 transmis. Diapositive 7 Si vous avez des questions, vous pouvez m'envoyer un mail (marceau.bouchez@ens-paris-saclay.fr).","title":"Pr\u00e9sentation SDMMC"},{"location":"presentation/#presentation-sur-le-sdmmc","text":"Cette partie permet d'afficher la pr\u00e9sentation sur le SDMMC sur un site web static.","title":"Pr\u00e9sentation sur le SDMMC"},{"location":"presentation/#diapositive-1","text":"","title":"Diapositive 1"},{"location":"presentation/#diapositive-2","text":"","title":"Diapositive 2"},{"location":"presentation/#diapositive-3","text":"On rappelle que le protocole SDMMC permet de faire communiquer une carte SD ou une carte MMC avec un microcontr\u00f4leur. Il est grandement inspir\u00e9 du protocole SPI, protocole tr\u00e8s utilis\u00e9. Il est donc important d'avoir quelques bases sur le SPI avant de comprendre le fonctionnement du SDMMC.","title":"Diapositive 3"},{"location":"presentation/#diapositive-4","text":"On pr\u00e9sent ainsi le protocole SPI rapidement avec son fonctionnement sur 4 fils. Cependant, il existe des configurations sur 3 fils o\u00f9 l'on regroupe le MOSI et le MISO sur un seul et unique fil. Ainsi, le SPI est flexible mais pr\u00e9sentent plus de connexions que l'I2C.","title":"Diapositive 4"},{"location":"presentation/#diapositive-5","text":"Le protocole SDMMC est bas\u00e9 sur une configuration SPI \u00e0 3 fils (3 wired). C'est un protocole qui permet de meilleures performances en terme de rapidit\u00e9 que le SPI. De plus, il est assez flexible car on peut param\u00e9trer le bus de donn\u00e9es en diff\u00e9rents modes. Enfin, il prend en compte le DMA pour gagner en rapidit\u00e9 lorsque l'on souhaite transferer des donn\u00e9es.","title":"Diapositive 5"},{"location":"presentation/#diapositive-6","text":"On explique dans cette diapositive rapidement le fonctionnement g\u00e9n\u00e9ral du SDMMC et sa syntaxe avec un bit de START , un bit de STOP et un checksum \u00e0 la fin pour v\u00e9rifier l'int\u00e9grit\u00e9 de ce qui a \u00e9t\u00e9 transmis.","title":"Diapositive 6"},{"location":"presentation/#diapositive-7","text":"Si vous avez des questions, vous pouvez m'envoyer un mail (marceau.bouchez@ens-paris-saclay.fr).","title":"Diapositive 7"}]}